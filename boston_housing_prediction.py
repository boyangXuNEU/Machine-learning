# -*- coding: utf-8 -*-
"""Boston housing prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rW-OC2JaQHmOfLdGsxg7XB_XPe85Kfcy
"""

#波士顿房价分析

#读取波士顿房价数据集
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.datasets import load_boston
dir(load_boston())
X = load_boston().data
Y = load_boston().target
df = pd.DataFrame(X,columns=load_boston().feature_names)
df.head()

#相关性检验
plt.figure(figsize=(12,8))
sns.heatmap(df.corr(), annot=True, fmt='.2f',cmap='PuBu')

sns.pairplot(df[["LSTAT","RM"]])

#划分训练集和测试集
X_train, X_test,y_train,y_test = train_test_split(X,Y,test_size = 0.2)
print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)

#线性回归模型
model = LinearRegression()
model.fit(X_train, y_train)
coef = model.coef_
line_pre = model.predict(X_test)
print(line_pre.shape)
print(y_test.shape)

#画图
plt.plot(y_test,color="blue", label="Truth")
plt.plot(line_pre,color="red", label="Predict")
plt.legend()
plt.show()

#评价模型
print(model.score(X_test,y_test))
plt.scatter(y_test, line_pre,label="y")
plt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], 'k--',lw=4,label="predicted")